// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class TringleTestingTest
{
    private IWebDriver driver;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;

    private string baseUrl = "http://localhost/triangleSolverBuggy/";

    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
    }

    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    [Test]
    public void value_123_Perimeter()
    {
        driver.Navigate().GoToUrl(baseUrl);
        driver.Manage().Window.Size = new System.Drawing.Size(1360, 802);
        driver.FindElement(By.Id("firstSide")).Click();
        driver.FindElement(By.Id("firstSide")).SendKeys("1");
        driver.FindElement(By.Id("secondSide")).Click();
        driver.FindElement(By.Id("secondSide")).SendKeys("2");
        driver.FindElement(By.Id("thirdSide")).Click();
        driver.FindElement(By.Id("thirdSide")).SendKeys("3");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            string value = driver.FindElement(By.Id("trianglePerimeter")).GetAttribute("value");
            Assert.That(value, Is.EqualTo("9 m"));
        }
        driver.Close();
    }

    [Test]
    public void value_123_Scalene()
    {
        //Arrange
        driver.Navigate().GoToUrl(baseUrl);
        driver.Manage().Window.Size = new System.Drawing.Size(1360, 802);

        //Act
        driver.FindElement(By.Id("firstSide")).Click();
        driver.FindElement(By.Id("firstSide")).SendKeys("1");
        driver.FindElement(By.Id("secondSide")).Click();
        driver.FindElement(By.Id("secondSide")).SendKeys("2");
        driver.FindElement(By.Id("thirdSide")).Click();
        driver.FindElement(By.Id("thirdSide")).SendKeys("3");
        driver.FindElement(By.Id("btnSubmit")).Click();

        //Assert
        {
            string value = driver.FindElement(By.Id("triangleType")).GetAttribute("value");
            Assert.That(value, Is.EqualTo("Scalene triangle"));
        }
        driver.Close();
    }

    [Test]
    public void firstsideValidationError()
    {
        driver.Navigate().GoToUrl(baseUrl);
        driver.Manage().Window.Size = new System.Drawing.Size(1360, 802);
        driver.FindElement(By.Id("secondSide")).Click();
        driver.FindElement(By.Id("secondSide")).SendKeys("2");
        driver.FindElement(By.Id("thirdSide")).Click();
        driver.FindElement(By.Id("thirdSide")).SendKeys("3");
        driver.FindElement(By.Id("btnSubmit")).Click();
        Assert.That(driver.FindElement(By.Id("firstSide-error")).Text, Is.EqualTo("First side of the triangle is required"));
    }
}
